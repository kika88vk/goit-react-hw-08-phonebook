{"version":3,"file":"static/js/334.50dcef05.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactListItem/ContactListItem.module.css?fe27","components/ContactList/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/ContactsPage.module.css?7675","pages/ContactsPage.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { useDispatch } from 'react-redux';\n// import { formAddContact } from 'redux/contactsSlice';\nimport { selectContacts } from 'redux/selectors';\nimport { fetchAddContact } from 'redux/contacts/operations';\nimport iziToast from 'izitoast';\nimport '/node_modules/izitoast/dist/css/iziToast.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  let nameInputId = nanoid(10);\n  let numberInputId = nanoid(10);\n\n  const handleInputName = evt => {\n    setName(evt.currentTarget.value);\n  };\n  const handleInputNumber = evt => {\n    setNumber(evt.currentTarget.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (existingContact) {\n      iziToast.warning({\n        title: 'Caution',\n        message: `Contact with this name \"${existingContact.name}\" is already exists.`,\n      });\n      return;\n    }\n    evt.preventDefault();\n\n    // const name = evt.currentTarget.elements.name.value;\n    // const number = evt.currentTarget.elements.number.value;\n\n    const contact = {\n      name,\n      number,\n    };\n    console.log('contact', contact);\n\n    dispatch(fetchAddContact(contact));\n\n    if (!existingContact) {\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId} className={css.label}>\n        Name\n      </label>\n      <input\n        className={css.input}\n        id={nameInputId}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleInputName}\n      />\n      <label htmlFor={numberInputId} className={css.label}>\n        Number\n      </label>\n      <input\n        className={css.input}\n        id={numberInputId}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleInputNumber}\n      />\n      <button type=\"submit\" className={css.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactListItem_contact__l9TCy\",\"contact_item\":\"ContactListItem_contact_item__c5xaq\",\"btn\":\"ContactListItem_btn__simej\"};","import PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { fetchDeleteContact } from 'redux/contacts/operations';\n\nexport const ContactListItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li id={id} className={css.contact_item}>\n      <p className={css.contact}>\n        {name}: {phone}\n        <button\n          className={css.btn}\n          type=\"button\"\n          onClick={() => dispatch(fetchDeleteContact(id))}\n        >\n          Delete\n        </button>\n      </p>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  phone: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { ContactListItem } from './ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport {\n  // selectFilteredContacts,\n  selectContacts,\n  selectFilterList,\n} from 'redux/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  // const visibleContacts = useSelector(selectFilteredContacts);\n  const contacts = useSelector(selectContacts);\n  const filterList = useSelector(selectFilterList);\n\n  const getFilteredContacts = () => {\n    let normalizedFilter = filterList.toLowerCase();\n    let filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return filteredContacts;\n  };\n\n  const visibleContacts = getFilteredContacts();\n  return (\n    <ul className={css.contactList}>\n      {visibleContacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          name={contact.name}\n          phone={contact.number}\n          id={contact.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"filter_container\":\"Filter_filter_container__f0O5y\"};","import css from './Filter.module.css';\nimport { useSelector } from 'react-redux';\nimport { setFilterList } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const filterList = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.filter_container}>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          value={filterList}\n          placeholder=\"Search...\"\n          onChange={evt => dispatch(setFilterList(evt.currentTarget.value))}\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"ContactsPage_heading__waeMd\",\"phonebook\":\"ContactsPage_phonebook__Vs2ct\",\"container\":\"ContactsPage_container__BubeA\"};","import ContactForm from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport css from './ContactsPage.module.css';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading, selectContacts } from 'redux/selectors';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <div className={css.phonebook}>\n        <h1 className={css.heading}>Phonebook</h1>\n\n        <ContactForm />\n\n        <h2 className={css.heading}>Contacts</h2>\n        <div className={css.filterContainer}>\n          <Filter />\n          {isLoading && !error && <ThreeDots color=\"#4a346b\" />}\n          {contacts && <ContactList />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","nameInputId","numberInputId","reset","className","css","onSubmit","evt","preventDefault","existingContact","find","contact","toLowerCase","iziToast","title","message","console","log","fetchAddContact","htmlFor","type","pattern","required","value","onChange","currentTarget","ContactListItem","phone","onClick","fetchDeleteContact","ContactList","filterList","selectFilterList","visibleContacts","normalizedFilter","filter","includes","getFilteredContacts","map","Filter","state","placeholder","setFilterList","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","color"],"sourceRoot":""}